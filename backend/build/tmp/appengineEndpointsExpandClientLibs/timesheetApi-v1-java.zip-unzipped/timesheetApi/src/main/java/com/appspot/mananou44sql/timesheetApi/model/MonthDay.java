/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-10-28 17:08:27 UTC)
 * on 2014-11-06 at 12:30:22 UTC 
 * Modify at your own risk.
 */

package com.appspot.mananou44sql.timesheetApi.model;

/**
 * Model definition for MonthDay.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the timesheetApi. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MonthDay extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Chronology chronology;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer dayOfMonth;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DateTimeFieldType> fieldTypes;

  static {
    // hack to force ProGuard to consider DateTimeFieldType used, since otherwise it would be stripped out
    // see http://code.google.com/p/google-api-java-client/issues/detail?id=528
    com.google.api.client.util.Data.nullOf(DateTimeFieldType.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DateTimeField> fields;

  static {
    // hack to force ProGuard to consider DateTimeField used, since otherwise it would be stripped out
    // see http://code.google.com/p/google-api-java-client/issues/detail?id=528
    com.google.api.client.util.Data.nullOf(DateTimeField.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer monthOfYear;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> values;

  /**
   * @return value or {@code null} for none
   */
  public Chronology getChronology() {
    return chronology;
  }

  /**
   * @param chronology chronology or {@code null} for none
   */
  public MonthDay setChronology(Chronology chronology) {
    this.chronology = chronology;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDayOfMonth() {
    return dayOfMonth;
  }

  /**
   * @param dayOfMonth dayOfMonth or {@code null} for none
   */
  public MonthDay setDayOfMonth(java.lang.Integer dayOfMonth) {
    this.dayOfMonth = dayOfMonth;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<DateTimeFieldType> getFieldTypes() {
    return fieldTypes;
  }

  /**
   * @param fieldTypes fieldTypes or {@code null} for none
   */
  public MonthDay setFieldTypes(java.util.List<DateTimeFieldType> fieldTypes) {
    this.fieldTypes = fieldTypes;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<DateTimeField> getFields() {
    return fields;
  }

  /**
   * @param fields fields or {@code null} for none
   */
  public MonthDay setFields(java.util.List<DateTimeField> fields) {
    this.fields = fields;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMonthOfYear() {
    return monthOfYear;
  }

  /**
   * @param monthOfYear monthOfYear or {@code null} for none
   */
  public MonthDay setMonthOfYear(java.lang.Integer monthOfYear) {
    this.monthOfYear = monthOfYear;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getValues() {
    return values;
  }

  /**
   * @param values values or {@code null} for none
   */
  public MonthDay setValues(java.util.List<java.lang.Integer> values) {
    this.values = values;
    return this;
  }

  @Override
  public MonthDay set(String fieldName, Object value) {
    return (MonthDay) super.set(fieldName, value);
  }

  @Override
  public MonthDay clone() {
    return (MonthDay) super.clone();
  }

}
