/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-10-28 17:08:27 UTC)
 * on 2014-11-06 at 12:30:22 UTC 
 * Modify at your own risk.
 */

package com.appspot.mananou44sql.timesheetApi;

/**
 * Service definition for TimesheetApi (v1).
 *
 * <p>
 * An API to manage timesheet
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TimesheetApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class TimesheetApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.0 of the timesheetApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://mananou44sql.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "timesheetApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public TimesheetApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  TimesheetApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "get".
   *
   * This request holds the parameters needed by the timesheetApi server.  After setting any optional
   * parameters, call the {@link Get#execute()} method to invoke the remote operation.
   *
   * @param contract
   * @param monthDay
   * @return the request
   */
  public Get get(java.lang.String contract, java.lang.String monthDay) throws java.io.IOException {
    Get result = new Get(contract, monthDay);
    initialize(result);
    return result;
  }

  public class Get extends TimesheetApiRequest<com.appspot.mananou44sql.timesheetApi.model.Timesheet> {

    private static final String REST_PATH = "timesheet/{contract}/{monthDay}";

    /**
     * Create a request for the method "get".
     *
     * This request holds the parameters needed by the the timesheetApi server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
     * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param contract
     * @param monthDay
     * @since 1.13
     */
    protected Get(java.lang.String contract, java.lang.String monthDay) {
      super(TimesheetApi.this, "GET", REST_PATH, null, com.appspot.mananou44sql.timesheetApi.model.Timesheet.class);
      this.contract = com.google.api.client.util.Preconditions.checkNotNull(contract, "Required parameter contract must be specified.");
      this.monthDay = com.google.api.client.util.Preconditions.checkNotNull(monthDay, "Required parameter monthDay must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Get setAlt(java.lang.String alt) {
      return (Get) super.setAlt(alt);
    }

    @Override
    public Get setFields(java.lang.String fields) {
      return (Get) super.setFields(fields);
    }

    @Override
    public Get setKey(java.lang.String key) {
      return (Get) super.setKey(key);
    }

    @Override
    public Get setOauthToken(java.lang.String oauthToken) {
      return (Get) super.setOauthToken(oauthToken);
    }

    @Override
    public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Get) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Get setQuotaUser(java.lang.String quotaUser) {
      return (Get) super.setQuotaUser(quotaUser);
    }

    @Override
    public Get setUserIp(java.lang.String userIp) {
      return (Get) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String contract;

    /**

     */
    public java.lang.String getContract() {
      return contract;
    }

    public Get setContract(java.lang.String contract) {
      this.contract = contract;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String monthDay;

    /**

     */
    public java.lang.String getMonthDay() {
      return monthDay;
    }

    public Get setMonthDay(java.lang.String monthDay) {
      this.monthDay = monthDay;
      return this;
    }

    @Override
    public Get set(String parameterName, Object value) {
      return (Get) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "patch".
   *
   * This request holds the parameters needed by the timesheetApi server.  After setting any optional
   * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
   *
   * @param contract
   * @param monthDay
   * @param content the {@link com.appspot.mananou44sql.timesheetApi.model.Timesheet}
   * @return the request
   */
  public Patch patch(java.lang.String contract, java.lang.String monthDay, com.appspot.mananou44sql.timesheetApi.model.Timesheet content) throws java.io.IOException {
    Patch result = new Patch(contract, monthDay, content);
    initialize(result);
    return result;
  }

  public class Patch extends TimesheetApiRequest<com.appspot.mananou44sql.timesheetApi.model.Timesheet> {

    private static final String REST_PATH = "timesheet";

    /**
     * Create a request for the method "patch".
     *
     * This request holds the parameters needed by the the timesheetApi server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     * <p> {@link
     * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param contract
     * @param monthDay
     * @param content the {@link com.appspot.mananou44sql.timesheetApi.model.Timesheet}
     * @since 1.13
     */
    protected Patch(java.lang.String contract, java.lang.String monthDay, com.appspot.mananou44sql.timesheetApi.model.Timesheet content) {
      super(TimesheetApi.this, "PATCH", REST_PATH, content, com.appspot.mananou44sql.timesheetApi.model.Timesheet.class);
      this.contract = com.google.api.client.util.Preconditions.checkNotNull(contract, "Required parameter contract must be specified.");
      this.monthDay = com.google.api.client.util.Preconditions.checkNotNull(monthDay, "Required parameter monthDay must be specified.");
    }

    @Override
    public Patch setAlt(java.lang.String alt) {
      return (Patch) super.setAlt(alt);
    }

    @Override
    public Patch setFields(java.lang.String fields) {
      return (Patch) super.setFields(fields);
    }

    @Override
    public Patch setKey(java.lang.String key) {
      return (Patch) super.setKey(key);
    }

    @Override
    public Patch setOauthToken(java.lang.String oauthToken) {
      return (Patch) super.setOauthToken(oauthToken);
    }

    @Override
    public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Patch) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Patch setQuotaUser(java.lang.String quotaUser) {
      return (Patch) super.setQuotaUser(quotaUser);
    }

    @Override
    public Patch setUserIp(java.lang.String userIp) {
      return (Patch) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String contract;

    /**

     */
    public java.lang.String getContract() {
      return contract;
    }

    public Patch setContract(java.lang.String contract) {
      this.contract = contract;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String monthDay;

    /**

     */
    public java.lang.String getMonthDay() {
      return monthDay;
    }

    public Patch setMonthDay(java.lang.String monthDay) {
      this.monthDay = monthDay;
      return this;
    }

    @Override
    public Patch set(String parameterName, Object value) {
      return (Patch) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "reject".
   *
   * This request holds the parameters needed by the timesheetApi server.  After setting any optional
   * parameters, call the {@link Reject#execute()} method to invoke the remote operation.
   *
   * @param contract
   * @param monthDay
   * @return the request
   */
  public Reject reject(java.lang.String contract, java.lang.String monthDay) throws java.io.IOException {
    Reject result = new Reject(contract, monthDay);
    initialize(result);
    return result;
  }

  public class Reject extends TimesheetApiRequest<com.appspot.mananou44sql.timesheetApi.model.Timesheet> {

    private static final String REST_PATH = "reject/{contract}/{monthDay}";

    /**
     * Create a request for the method "reject".
     *
     * This request holds the parameters needed by the the timesheetApi server.  After setting any
     * optional parameters, call the {@link Reject#execute()} method to invoke the remote operation.
     * <p> {@link
     * Reject#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param contract
     * @param monthDay
     * @since 1.13
     */
    protected Reject(java.lang.String contract, java.lang.String monthDay) {
      super(TimesheetApi.this, "PUT", REST_PATH, null, com.appspot.mananou44sql.timesheetApi.model.Timesheet.class);
      this.contract = com.google.api.client.util.Preconditions.checkNotNull(contract, "Required parameter contract must be specified.");
      this.monthDay = com.google.api.client.util.Preconditions.checkNotNull(monthDay, "Required parameter monthDay must be specified.");
    }

    @Override
    public Reject setAlt(java.lang.String alt) {
      return (Reject) super.setAlt(alt);
    }

    @Override
    public Reject setFields(java.lang.String fields) {
      return (Reject) super.setFields(fields);
    }

    @Override
    public Reject setKey(java.lang.String key) {
      return (Reject) super.setKey(key);
    }

    @Override
    public Reject setOauthToken(java.lang.String oauthToken) {
      return (Reject) super.setOauthToken(oauthToken);
    }

    @Override
    public Reject setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Reject) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Reject setQuotaUser(java.lang.String quotaUser) {
      return (Reject) super.setQuotaUser(quotaUser);
    }

    @Override
    public Reject setUserIp(java.lang.String userIp) {
      return (Reject) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String contract;

    /**

     */
    public java.lang.String getContract() {
      return contract;
    }

    public Reject setContract(java.lang.String contract) {
      this.contract = contract;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String monthDay;

    /**

     */
    public java.lang.String getMonthDay() {
      return monthDay;
    }

    public Reject setMonthDay(java.lang.String monthDay) {
      this.monthDay = monthDay;
      return this;
    }

    @Override
    public Reject set(String parameterName, Object value) {
      return (Reject) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "update".
   *
   * This request holds the parameters needed by the timesheetApi server.  After setting any optional
   * parameters, call the {@link Update#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.mananou44sql.timesheetApi.model.Timesheet}
   * @return the request
   */
  public Update update(com.appspot.mananou44sql.timesheetApi.model.Timesheet content) throws java.io.IOException {
    Update result = new Update(content);
    initialize(result);
    return result;
  }

  public class Update extends TimesheetApiRequest<com.appspot.mananou44sql.timesheetApi.model.Timesheet> {

    private static final String REST_PATH = "timesheet";

    /**
     * Create a request for the method "update".
     *
     * This request holds the parameters needed by the the timesheetApi server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     * <p> {@link
     * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.mananou44sql.timesheetApi.model.Timesheet}
     * @since 1.13
     */
    protected Update(com.appspot.mananou44sql.timesheetApi.model.Timesheet content) {
      super(TimesheetApi.this, "PUT", REST_PATH, content, com.appspot.mananou44sql.timesheetApi.model.Timesheet.class);
    }

    @Override
    public Update setAlt(java.lang.String alt) {
      return (Update) super.setAlt(alt);
    }

    @Override
    public Update setFields(java.lang.String fields) {
      return (Update) super.setFields(fields);
    }

    @Override
    public Update setKey(java.lang.String key) {
      return (Update) super.setKey(key);
    }

    @Override
    public Update setOauthToken(java.lang.String oauthToken) {
      return (Update) super.setOauthToken(oauthToken);
    }

    @Override
    public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Update) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Update setQuotaUser(java.lang.String quotaUser) {
      return (Update) super.setQuotaUser(quotaUser);
    }

    @Override
    public Update setUserIp(java.lang.String userIp) {
      return (Update) super.setUserIp(userIp);
    }

    @Override
    public Update set(String parameterName, Object value) {
      return (Update) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "validate".
   *
   * This request holds the parameters needed by the timesheetApi server.  After setting any optional
   * parameters, call the {@link Validate#execute()} method to invoke the remote operation.
   *
   * @param contract
   * @param monthDay
   * @return the request
   */
  public Validate validate(java.lang.String contract, java.lang.String monthDay) throws java.io.IOException {
    Validate result = new Validate(contract, monthDay);
    initialize(result);
    return result;
  }

  public class Validate extends TimesheetApiRequest<com.appspot.mananou44sql.timesheetApi.model.Timesheet> {

    private static final String REST_PATH = "validate/{contract}/{monthDay}";

    /**
     * Create a request for the method "validate".
     *
     * This request holds the parameters needed by the the timesheetApi server.  After setting any
     * optional parameters, call the {@link Validate#execute()} method to invoke the remote operation.
     * <p> {@link
     * Validate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param contract
     * @param monthDay
     * @since 1.13
     */
    protected Validate(java.lang.String contract, java.lang.String monthDay) {
      super(TimesheetApi.this, "PUT", REST_PATH, null, com.appspot.mananou44sql.timesheetApi.model.Timesheet.class);
      this.contract = com.google.api.client.util.Preconditions.checkNotNull(contract, "Required parameter contract must be specified.");
      this.monthDay = com.google.api.client.util.Preconditions.checkNotNull(monthDay, "Required parameter monthDay must be specified.");
    }

    @Override
    public Validate setAlt(java.lang.String alt) {
      return (Validate) super.setAlt(alt);
    }

    @Override
    public Validate setFields(java.lang.String fields) {
      return (Validate) super.setFields(fields);
    }

    @Override
    public Validate setKey(java.lang.String key) {
      return (Validate) super.setKey(key);
    }

    @Override
    public Validate setOauthToken(java.lang.String oauthToken) {
      return (Validate) super.setOauthToken(oauthToken);
    }

    @Override
    public Validate setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Validate) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Validate setQuotaUser(java.lang.String quotaUser) {
      return (Validate) super.setQuotaUser(quotaUser);
    }

    @Override
    public Validate setUserIp(java.lang.String userIp) {
      return (Validate) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String contract;

    /**

     */
    public java.lang.String getContract() {
      return contract;
    }

    public Validate setContract(java.lang.String contract) {
      this.contract = contract;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String monthDay;

    /**

     */
    public java.lang.String getMonthDay() {
      return monthDay;
    }

    public Validate setMonthDay(java.lang.String monthDay) {
      this.monthDay = monthDay;
      return this;
    }

    @Override
    public Validate set(String parameterName, Object value) {
      return (Validate) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link TimesheetApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link TimesheetApi}. */
    @Override
    public TimesheetApi build() {
      return new TimesheetApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TimesheetApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTimesheetApiRequestInitializer(
        TimesheetApiRequestInitializer timesheetapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(timesheetapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
